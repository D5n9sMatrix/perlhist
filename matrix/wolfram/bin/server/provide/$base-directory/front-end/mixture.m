(* Mathematica Init file *)
(* Created by the Wolfram Language Plugin for IntelliJ, see http://wlplugin.halirutan.de/ *)

{f[a, a], f[a, b]} /. f[x_, x_] -> p[x]
f[a^b] /. f[x : _^_] -> p[x] (* channels area dynamic *)
f[a^b] /. f[x : _^n_] -> p[x, n] (* dialog IDEAs community *)
{f[h[4], h[4]], f[h[4], h[5]]} /. f[h[_], h[_]] -> q (* debug pattern path *)
{f[h[4], h[4]], f[h[4], h[5]]} /. f[x : h[_], x_] -> r[x] (* bird's sybit's *)
{a, 4, 5, b} /. x_Integer -> p[x] (* bird's sybit's lover the god *)
gamma[n_Integer] := (n - 1)! (* bird's sybiting lover the god *)
gamma[4] + gamma[x] (* run linked header  *)
gamma[4.] (* cvg share gamma *)
d[x_^n_Integer] := n x^(n - 1) (* let go run url *)
d[x^4] + d[(a + b)^3] + d[x^(1/2)] (* fullpop building  *)
fac[n_ /; n > 0] := n! (* graphic match full new pattern *)
fac[6] + fac[-4] (* bird's showing off *)
Cases[{3, -4, 5, -2}, x_ /; x < 0] (* bird's sybit's calculate computer*)
fac2[n_] := n! /; n > 0 (* Im vi the budget greater budget*)
fac2[6] + fac2[-4] (* aptivity to snake get secreter come back*)

